# Configure networking:
# - Ubuntu 20.04 AWS VM
# Note:
# - The assignment of the network interfaces for the AWS instances is the opposite of the
#   Azure instances (and the setup documentation).  The AWS instances assign the primary NIC as the node NIC, and the 
#   secondary NIC as the client NIC.
---
- name: Get physical interfaces names
  command: find /sys/class/net -type l -not -lname '*virtual*' -name '*ens*' -printf '%f\n'
  register: network_interfaces
  tags:
    - configure
    - network

- name: Fail when two network interfaces are not found
  fail: msg="Two NICs are required, but found {{ network_interfaces.stdout_lines|sort|count }}"
  when: network_interfaces.stdout_lines|count != 2
  tags:
    - configure
    - network

# =================================================================================
# Get Node NIC (NIC-1) details
# ---------------------------------------------------------------------------------
- name: Set eth0 variable
  set_fact:
     eth0: "{{ (network_interfaces.stdout_lines|sort)[0] }}"
  tags:
    - configure
    - network

- name: Find eth0 mac
  shell: cat /sys/class/net/{{ eth0 }}/address
  register: eth0_mac_cmd
  tags:
     - configure
     - network

- name: Set eth0_mac variable
  set_fact:
     eth0_mac: "{{ eth0_mac_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network

- name: Find eth0 ip address
  shell: curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/{{ eth0_mac }}/local-ipv4s
  register: eth0_ip_cmd
  tags:
     - configure
     - network

- name: Set eth0_ip variable
  set_fact:
     eth0_ip: "{{ eth0_ip_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network

- name: Find eth0 gateway address
  shell: >
          echo "{{ eth0_ip }}" |
          awk -F"." '{print $1"."$2"."$3".1"}'
  register: eth0_gw_cmd
  tags:
     - configure
     - network

- name: Set eth0_gw variable
  set_fact:
     eth0_gw: "{{ eth0_gw_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network
# =================================================================================

# =================================================================================
# Get Client NIC (NIC-2) details
# ---------------------------------------------------------------------------------
- name: Set eth1 variable
  set_fact:
     eth1: "{{ (network_interfaces.stdout_lines|sort)[-1] }}"
  tags:
    - configure
    - network

- name: Find eth1 mac
  shell: cat /sys/class/net/{{ eth1 }}/address
  register: eth1_mac_cmd
  tags:
     - configure
     - network

- name: Set eth1_mac variable
  set_fact:
     eth1_mac: "{{ eth1_mac_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network

- name: Find eth1 ip address
  shell: curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/{{ eth1_mac }}/local-ipv4s
  register: eth1_ip_cmd
  tags:
     - configure
     - network

- name: Set eth1_ip variable
  set_fact:
     eth1_ip: "{{ eth1_ip_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network

- name: Find eth1 gateway address
  shell: >
          echo "{{ eth1_ip }}" |
          awk -F"." '{print $1"."$2"."$3".1"}'
  register: eth1_gw_cmd
  tags:
     - configure
     - network

- name: Set eth1_gw variable
  set_fact:
     eth1_gw: "{{ eth1_gw_cmd.stdout_lines[0] }}"
  tags:
    - configure
    - network
# =================================================================================

# =================================================================================
# Set Client and Node IP Address Variables
# ---------------------------------------------------------------------------------
- name: Set client_ip variable
  set_fact:
     client_ip: "{{ eth1_ip }}"
  tags:
    - configure
    - network

- name: Set node_ip variable
  set_fact:
     node_ip: "{{ eth0_ip }}"
  tags:
    - configure
    - network
# =================================================================================

- name: Print NICs details
  debug:
    msg:  "Client IP: {{ client_ip }}; Node IP {{ node_ip }}; NIC1: {{ eth0 }} IP: {{ eth0_ip }} GW: {{ eth0_gw }}; NIC2: {{ eth1 }} IP: {{ eth1_ip }} GW: {{ eth1_gw }}"
  tags:
    - configure
    - network

- name: Update Netplan networking configuration for NIC-2
  template:
    src: network-interface/51-eth1.j2
    dest: /etc/netplan/51-eth1.yaml
    owner: root
    group: root
  become: true
  notify: Apply Netplan
  tags:
    - configure
    - network