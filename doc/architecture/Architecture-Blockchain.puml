@startuml
allow_mixing

title
    Pancanadian Indy Blockchain (Candy Blockchain). 
    Setting up Indy node, managed by different Canadian jurisdiction.
end title

caption Architecture of the Pancanadian Indy Blockchain

'Références graphique
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/master/dist
!define AzurePuml https://raw.githubusercontent.com/plantuml-stdlib/Azure-PlantUML/release/2-1/dist
!define ICONURL https://raw.githubusercontent.com/Roemer/plantuml-office/master/office2014

'Composants graphique
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureSimplified.puml
!includeurl AzurePuml/Identity/AzureActiveDirectory.puml
!includeurl AzurePuml/Mobile/AzureNotificationHubs.puml
!includeurl AWSPuml/AWSCommon.puml
!includeurl AWSPuml/AWSSimplified.puml
!includeurl AWSPuml/General/Users.puml
!includeurl AWSPuml/General/MobileClient.puml
!includeurl AWSPuml/General/InternetAlt2.puml
!includeurl AWSPuml/General/Client.puml
!includeurl AWSPuml/GroupIcons/ServerContents.puml
!includeurl AWSPuml/Blockchain/Blockchain.puml
!includeurl AWSPuml/Database/RDSPostgreSQLinstance.puml
!includeurl AWSPuml/GroupIcons/Cloud.puml
!includeurl AWSPuml/SecurityIdentityAndCompliance/IAMDataEncryptionKey.puml
!includeurl ICONURL/Concepts/link.puml

InternetAlt2(internet, "Internet", "")

'Observer Nodes
'Validator Nodes
'Tails Filess
'   Initial Trustee (blockchain endpoint / genesis block)
'   Initial Steward (validator node endpoint)
'   Initial Endorsor (jurisdiction top level to create issuer)
node "Trust Registry - Pancanadian Blockchain" as candydlt {

    node "Node CAN" as NodeCA #LightGreen {
        ServerContents(agentServiceCA, "Agent Services", "Bastion")
        Blockchain(dltCA, "Validator Node", "Registre de confiance") #LightBlue
        database "KMS Blockhain Wallet" as kmsCA #LightBlue
        ServerContents(serverCA, "CLI and Steward Monitoring Tools", "Bastion")
        AzureNotificationHubs(snsCA, "Notification", "Alertage") 
        ServerContents(TailCA, "Tails Files", "Registre de Révocation")
    }

    node "Node ON" as NodeON #LightGreen {
        ServerContents(agentServiceON, "Agent Services", "Bastion")
        Blockchain(dltON, "Validator Node", "Registre de confiance") #LightBlue
        database "KMS Blockhain Wallet" as kmsON #LightBlue
        ServerContents(serverON, "CLI and Steward Monitoring Tools", "Bastion")
        AzureNotificationHubs(snsON, "Notification", "Alertage") 
        ServerContents(TailON, "Tails Files", "Registre de Révocation")
    }

    node "Node QC" as NodeQC #LightGreen {	
        ServerContents(agentServiceQC, "Agent Services", "Bastion")
        Blockchain(dltQC, "Validator Node", "Registre de confiance") #LightBlue
        database "KMS Blockhain Wallet" as kmsQC #LightBlue
        ServerContents(serverQC, "CLI and Steward Monitoring Tools", "Bastion")
        AzureNotificationHubs(snsQC, "Notification", "Alertage") 
        ServerContents(TailQC, "Tails Files", "Registre de Révocation")
    }

    node "Node BC" as NodeBC #LightGreen {
        ServerContents(agentServiceBC, "Agent Services", "Bastion")
        Blockchain(dltBC, "Validator Node", "Registre de confiance") #LightBlue
        database "KMS Blockhain Wallet" as kmsBC #LightBlue
        ServerContents(serverBC, "CLI and Steward Monitoring Tools", "Bastion")
        AzureNotificationHubs(snsBC, "Notification", "Alertage") 
        ServerContents(TailBC, "Tails Files", "Registre de Révocation")
    }

    node "Node NS" as NodeNS #LightGreen {
        ServerContents(agentServiceNS, "Agent Services", "Bastion")
        Blockchain(dltNS, "Validator Node", "Registre de confiance") #LightBlue
        database "KMS Blockhain Wallet" as kmsNS #LightBlue
        ServerContents(serverNS, "CLI and Steward Monitoring Tools", "Bastion")
        AzureNotificationHubs(snsNS, "Notification", "Alertage") 
        ServerContents(TailNS, "Tails Files", "Registre de Révocation")
    }

}

node "Gouvernance Opérationnelle - Pancanadian Blockchain" as Gov {
    MobileClient(cellCA, "Mobile Employé", "appareil de l'employé") #LightBlue
    Users(EmployeCA, "Employé CA", "Sysadmin CA")

    MobileClient(cellON, "Mobile Employé", "appareil de l'employé") #LightBlue
    Users(EmployeON, "Employé ON", "Sysadmin ON")

    MobileClient(cellQC, "Mobile Employé", "appareil de l'employé") #LightBlue
    Users(EmployeQC, "Employé QC", "Sysadmin QC")

    MobileClient(cellBC, "Mobile Employé", "appareil de l'employé") #LightBlue
    Users(EmployeBC, "Employé BC", "Sysadmin BC")

    MobileClient(cellNS, "Mobile Employé", "appareil de l'employé") #LightBlue
    Users(EmployeNS, "Employé NS", "Sysadmin NS")
}

'DÉFINITION DES LIENS
internet --> agentServiceNS
internet --> agentServiceCA
internet --> agentServiceON
internet --> agentServiceQC
internet --> agentServiceBC

agentServiceNS -- snsNS
agentServiceBC -- snsBC
agentServiceON -- snsON
agentServiceQC -- snsQC
agentServiceCA -- snsCA

agentServiceNS -- TailNS
agentServiceBC -- TailBC
agentServiceON -- TailON
agentServiceQC -- TailQC
agentServiceCA -- TailCA

agentServiceNS -- dltNS
agentServiceBC -- dltBC
agentServiceON -- dltON
agentServiceQC -- dltQC
agentServiceCA -- dltCA

dltNS -- serverNS
dltBC -- serverBC
dltON -- serverON
dltQC -- serverQC
dltCA -- serverCA

serverNS -- kmsNS
serverBC -- kmsBC
serverON -- kmsON
serverQC -- kmsQC
serverCA -- kmsCA

kmsNS -- agentServiceNS
kmsBC -- agentServiceBC
kmsON -- agentServiceON
kmsQC -- agentServiceQC
kmsCA -- agentServiceCA

'candydlt -down- Gov

'snsCA --> cellCA
'snsON --> cellON
'snsQC --> cellQC
'snsBC --> cellBC
'snsNS --> cellNS

snsCA --> Gov
snsON --> Gov
snsQC --> Gov
snsBC --> Gov
snsNS --> Gov

cellCA --> EmployeCA
cellON --> EmployeON
cellQC --> EmployeQC
cellBC --> EmployeBC
cellNS --> EmployeNS

@enduml